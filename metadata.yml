rules:
- apiGroups: ["devopstoolkitseries.com"]
  apiVersions: ["v1aplha1"]
  resources: ["sqlclaims", "sqls"]
  operations: ["CREATE", "UPDATE"]
mutating: false
contextAware: false
executionMode: kubewarden-wapc
# Consider the policy for the background audit scans. Default is true. Note the
# intrinsic limitations of the background audit feature on docs.kubewarden.io;
# If your policy hits any limitations, set to false for the audit feature to
# skip this policy and not generate false positives.
backgroundAudit: false
annotations:
  # artifacthub specific:
  io.artifacthub.displayName: DOT SQL
  io.artifacthub.resources: SQLClaim, SQL
  io.artifacthub.keywords: crossplane, postgresql, kubewarden
  io.kubewarden.policy.ociUrl: ghcr.io/bmutziu/kubewarden/crossplane-sql # must match release workflow oci-target
  # kubewarden specific:
  io.kubewarden.policy.title: crossplane-sql
  io.kubewarden.policy.description: Kubewarden Policies for dot-sql Crossplane Compositions
  io.kubewarden.policy.author: "Bogdan Mu»õiu <bmutziu@bmutziu.me>"
  io.kubewarden.policy.url: https://github.com/bmutziu/kubewarden-crossplane-sql
  io.kubewarden.policy.source: https://github.com/bmutziu/kubewarden-crossplane-sql
  io.kubewarden.policy.license: Apache-2.0
  # The next two annotations are used in the policy report generated by the
  # Audit scanner. Severity indicates policy check result criticality and
  # Category indicates policy category. See more here at docs.kubewarden.io
  io.kubewarden.policy.severity: medium # one of info, low, medium, high, critical. See docs.
  io.kubewarden.policy.category: Resource validation
